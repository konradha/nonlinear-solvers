- nicely refactor args to KGE 2d solvers, host and device (4x)
  -> make single driver for both 2d and 3d
- nicely refactor args to NLSE 2d solvers, host and device (4x)
  -> make single driver for both 2d and 3d

(for host/device each 2 drivers): 
  -> dimension as arg
  -> specs as args: L, n
  -> method 1: SV and SS2
  -> host / device

thus:
  - KGE_host_driver.cpp, KGE_dev_driver.cpp
  - NLSE_host_driver.cpp, NLSE_dev_driver.cpp

- adapt launchers correspondingly: Need 2d and 3d checks

- sanity-check solvers:
	- Krylov subspace host / device

	- step functions KGE
	- step functions NLSE
	  (both sufficient if test for 3d)
  -> should be thorough test cases showing that we're close up to an eps


- figure out nice factoring for u0, v0, (c,m) for KGE 2d
- figure out nice factoring for u0, v0, (c,m) for KGE 3d -- waveguides need to come back

- figure out nice factoring for u0, v0, (c,m) for NLSE 2d
- figure out nice factoring for u0, v0, (c,m) for NLSE 3d [STRETCH]
  -> might be difficult / infeasible depending on if solver actually works as expected

- collect 2TB for 3d cases // 5hrs
- collect 2TB for 2d cases // 10hrs -> need more phenomena to sample (have, just more runs)!

(should be doable tomorrow!)



0. abstract
1. intro: nonlinear waves, ML for PDEs, 

2. integrability & phyics (quickly walk through it, dimensionality, boundary conditions)
2.1 basics, dimensions
2.2 Lie groups, combinators
2.3 blow-ups (NLSE mostly)

3. numerical methods for integrable systems (explain methods, python prototyping)
3.0 stencils versus large operators, CFL, integrability
3.1 standard: symplectic -- nice
3.2 implicit: slow
3.3 energy-conserving: unclear
3.4 difficulty of incorporating BCs

4. Krylov subspace methods
4.1 explanation
4.2 low m is sufficient (compare with scipy also wrt speed) -- can in principle all be Python

5. exponential / trigonometric integrators -- filtering frequencies in stiff linear operators
5.1 SS2 usually: spectral: "infinite" domain
5.2 SS2 Krylov subspace: lots of matmuls for f(tA)u
5.3 Gautschi-type for KGE
5.4 sEWI for NLSE
5.5 \tau can be large in here (theoretically, unsure for high dimensions as this is ODE research)

6. Stormer-Verlet versus Gautschi-type (KGE)
full story: from idea to implementation (view on setup in Eigen, CUDA)
- standard circular soliton
- colliding solitons
- unphysical when hitting boundary

7. initial conditions
- see script from today -- extend for 2d case

8. (c, m) pairs
- constant c, m
- anisotropy
- waveguides

9. analysis
- some data
- checking proxies
- variety: tSNE
- data generation time

11. application to ML
- overall introduction into operator learning
- current sota architectures

12. finetuning [STRETCH]
- POSEIDON quip
- finetuning 2d
- finetuning 3d?

13. quanitizing POSEIDON [EXTREME STRETCH]
- existing model quantization
- finetuned (2d) quantization

14. summary
15. outlook


